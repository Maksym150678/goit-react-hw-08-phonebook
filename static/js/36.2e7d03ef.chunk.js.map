{"version":3,"file":"static/js/36.2e7d03ef.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/PhonebookList/phonebook-list.module.css?e267","components/Phonebook/PhonebookList/PhonebookList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/FormAddPhonebook/form-add-phonebook.module.css?6e4c","components/Phonebook/FormAddPhonebook/FormAddPhonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Filter/filter.module.css?7d57","components/Phonebook/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Modal/Modal.module.css?6971","components/Phonebook/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/FormChangeContact/FormChangeContact.module.css?afc6","components/Phonebook/FormChangeContact/FormChangeContact.jsx","redux/items/itemsSelector.js","redux/filter/filterSelector.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"phonebook-list_list__MJ3cZ\",\"item\":\"phonebook-list_item__tD8PV\",\"filter-title\":\"phonebook-list_filter-title__TjVNI\",\"buttonDelete\":\"phonebook-list_buttonDelete__iQcnO\"};","import styles from './phonebook-list.module.css';\nimport PropTypes from 'prop-types';\n\nconst PhonebookList = ({ phoneList, onDeletePhoneListItem, onClick }) => {\n  return (\n    <ul className={styles.list}>\n      {phoneList.map(({ id, name, number }) => (\n        <li key={id} id={id} className={styles.phoneListItem} onClick={onClick}>\n          <p className={styles.nameText} >{name}</p>\n          <p className={styles.phoneNumber} >{number}</p>\n          <button\n            className={styles.buttonDelete}\n            onClick={() => onDeletePhoneListItem(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PhonebookList;\n\nPhonebookList.propTypes = {\n  phoneList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeletePhoneListItem: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-add-phonebook_form__HAb1a\",\"label\":\"form-add-phonebook_label__GET3L\",\"subtitle\":\"form-add-phonebook_subtitle__V6w1F\",\"input\":\"form-add-phonebook_input__Ij+nC\",\"btn\":\"form-add-phonebook_btn__CqnhJ\"};","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './form-add-phonebook.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FormAddPhonebook({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      name,\n      number,\n    };\n\n    onSubmit(data);\n\n    resetAddPhonebook();\n  };\n\n  const resetAddPhonebook = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit} className={styles.form}>\n        <h1 className={styles.title}>Phonebook</h1>\n      <label htmlFor={nameInputId} className={styles.label}>\n        <h2 className={styles.subtitle}>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={styles.input}\n          value={name}\n          onChange={hendleInputChange}\n          id={nameInputId}\n          placeholder='Enter name'\n        />\n      </label>\n      <label htmlFor={numberInputId} className={styles.label}>\n        <h2 className={styles.subtitle}>Number</h2>  \n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={styles.input}\n          value={number}\n          onChange={hendleInputChange}\n          id={numberInputId}\n          placeholder='Enter the phone number'\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default FormAddPhonebook;\n\nFormAddPhonebook.propTypes = {\n  onSubmit: PropTypes.func,\n};\n ","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__3Onbh\",\"label\":\"filter_label__k4Jq2\",\"title\":\"filter_title__CO0XC\",\"input_filter\":\"filter_input_filter__o7Me5\"};","import styles from './filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <h2 className={styles.title}>Contacts</h2>\n      <label className={styles.label}>\n        Find contacts by name\n        <input className={styles.input_filter} type=\"text\" name=\"name\" value={value} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__vk2m-\",\"modal__content\":\"Modal_modal__content__GWRBS\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nconst Modal = ({ onClose, children }) => {\n  const modalRoot = document.querySelector('#root');\n\n  useEffect(() => {\n    window.addEventListener('keydown', hendleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', hendleKeyDown);\n    };\n  });\n\n  const hendleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const hendleBackDropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <div className={styles.overlay} onClick={hendleBackDropClick}>\n      <div className={styles.modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"changeContact\":\"FormChangeContact_changeContact__wkKQM\",\"label\":\"FormChangeContact_label__HYk6q\",\"input\":\"FormChangeContact_input__9a7n4\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { changeContactsItems } from '../../../redux/items/itemsOperations';\n\nimport styles from '../FormChangeContact/FormChangeContact.module.css';\n\nconst FormChangeContact = ({ findContact, onClose }) => {\n  const [name, setName] = useState(findContact.name);\n  const [phone, setPhone] = useState(findContact.number);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const hendleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const hendleSubmit = event => {\n    event.preventDefault();\n    const data = {\n      id: findContact.id,\n      name,\n      number: phone,\n    };\n    dispatch(changeContactsItems(data));\n    resetForm();\n    onClose();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={hendleSubmit} className={styles.form}>\n      <label htmlFor={nameInputId} className={styles.label}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Input name\"\n          className={styles.input}\n          value={name}\n          onChange={hendleInputChange}\n          id={nameInputId}\n        />\n      </label>\n      <label htmlFor={numberInputId} className={styles.label}>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Input number\"\n          className={styles.input}\n          value={phone}\n          onChange={hendleInputChange}\n          id={numberInputId}\n        />\n      </label>\n      <button type=\"submit\" className={styles.changeContact} onSubmit={hendleSubmit}>\n        Change contact\n      </button>\n    </form>\n  );\n};\n\nexport default FormChangeContact;","export const getContactsList = store => store.contacts;","export const getFilter = store => store.filter;","// extracted by mini-css-extract-plugin\nexport default {\"title__change\":\"ContactsPage_title__change__1bNaX\",\"contact__name\":\"ContactsPage_contact__name__o110v\",\"modal__close\":\"ContactsPage_modal__close__CD0Ws\"};","import { useEffect, useState } from 'react';\nimport PhonebookList from '../../components/Phonebook/PhonebookList/PhonebookList';\nimport FormAddPhonebook from '../../components/Phonebook/FormAddPhonebook/FormAddPhonebook';\nimport Filter from '../../components/Phonebook/Filter/Filter';\nimport Modal from 'components/Phonebook/Modal/Modal';\nimport FormChangeContact from '../../components/Phonebook/FormChangeContact/FormChangeContact';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContacts,\n  addItems,\n} from '../../redux/items/itemsOperations';\nimport { addFilter } from '../../redux/filter/filterActions';\nimport { getContactsList } from '../../redux/items/itemsSelector';\nimport { getFilter } from '../../redux/filter/filterSelector';\n\nimport styles from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [findContact, setFindContact] = useState({});\n  const { loading } = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const phoneList = useSelector(store => {\n    const filteredContact = store.contacts.items.filter(item =>\n      item.name.toLowerCase().includes(store.filter.toLocaleLowerCase())\n    );\n    return filteredContact;\n  });\n\n  const onAddContact = data => {\n    const action = addItems(data);\n    dispatch(action);\n  };\n\n  const onDelContact = id => {\n    const action = deleteContacts(id);\n    dispatch(action);\n  };\n\n  const onChangeFilter = event => {\n    const action = addFilter(event.currentTarget.value);\n    dispatch(action);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const findIdContact = event => {\n    if (event.target.localName === 'button')\n    {return};\n    const searchContact = phoneList.find(\n      contact => contact.id.toString() === event.currentTarget.id\n    );\n    console.log(event);\n    setFindContact(searchContact);\n    toggleModal();\n  };\n  return (\n    <div>\n      <FormAddPhonebook onSubmit={onAddContact} />\n      <Filter value={filter} onChange={onChangeFilter} />\n      {loading && <p>...Loading</p>}\n      <PhonebookList\n        phoneList={phoneList}\n        onDeletePhoneListItem={onDelContact}\n        onClick={findIdContact}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <h2 className={styles.title__change}>CHANGE CONTACT</h2>\n          <div className={styles.contact}>\n            <p className={styles.contact__name}>Name: {findContact.name}</p>\n            <p className={styles.contact__name}>Tel: {findContact.number}</p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={toggleModal}\n            className={styles.modal__close}\n          >\n            close\n          </button>\n          <FormChangeContact onClose={toggleModal} findContact={findContact} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["phoneList","onDeletePhoneListItem","onClick","className","styles","map","id","name","number","onSubmit","useState","setName","setNumber","nameInputId","nanoid","numberInputId","hendleInputChange","event","currentTarget","value","resetAddPhonebook","preventDefault","htmlFor","type","pattern","title","required","onChange","placeholder","onClose","children","modalRoot","document","querySelector","useEffect","window","addEventListener","hendleKeyDown","removeEventListener","code","createPortal","target","findContact","phone","setPhone","dispatch","useDispatch","hendleSubmit","data","changeContactsItems","resetForm","getContactsList","store","contacts","getFilter","filter","showModal","setShowModal","setFindContact","loading","useSelector","fetchContacts","items","item","toLowerCase","includes","toLocaleLowerCase","toggleModal","action","addItems","addFilter","deleteContacts","localName","searchContact","find","contact","toString","console","log","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}